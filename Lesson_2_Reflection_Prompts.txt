What happens when you initialize a repository? Why do you need to do it?

    It creates the directory .git to get ready to do commits.  Without it you
    cannot save versions of your files.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    It is a temporary holding area while you figure out what is the logical
    unit that is part of your commit.

How can you use the staging area to make sure you have one commit per logical
change?

    The staging area contains the files changed in the working directory that
    should only deal with the next logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    When you want to try out an experimental feature that you're not sure you
    want in the official version of your code.  A branch is separate from the
    master or main version and could be merged to the master branch at a later
    time.

How do the diagrams help you visualize the branch structure?

    To see the branches you have and which commits are reachable and not
    reachable.  Maybe to help in doing a merge of two branches.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
